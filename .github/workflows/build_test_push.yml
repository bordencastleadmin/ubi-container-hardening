name: Build, Test, and Push Containers

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          # Correct UBI 8.10 image
          - {name: "ubi", repo_name: "registry.access.redhat.com/ubi8/ubi", version: "8.10", dockerfile: "Dockerfile.ubi8"}
          # Python image with no version suffix
          - {name: "ubi-python", repo_name: "registry.access.redhat.com/ubi8/python-39", version: "", dockerfile: "Dockerfile.ubi8-python"}
          # OpenJDK image with no version suffix
          - {name: "ubi-openjdk", repo_name: "registry.access.redhat.com/ubi8/openjdk-17", version: "", dockerfile: "Dockerfile.ubi8-openjdk17"}
    
    steps:
      - uses: actions/checkout@v4

      - name: Build the Docker image
        run: |
          docker build . \
            --file ${{ matrix.container.dockerfile }} \
            --build-arg CONTAINER_VERSION_TAG="${{ matrix.container.repo_name }}:${{ matrix.container.version }}" \
            --tag "localbuild/${{ matrix.container.name }}:${{ matrix.container.version }}"

      - name: Vulnerability scan image
        id: vulnerability-scan
        uses: anchore/scan-action@v3
        with:
          image: "localbuild/${{ matrix.container.name }}:${{ matrix.container.version }}"
          only-fixed: true
          severity-cutoff: critical

      - name: Upload Vulnerability Scan
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.vulnerability-scan.outputs.sarif }}

      # SCAP and Inspec scans only for UBI images
      - name: Run DoD SCAP Scan
        if: matrix.container.name == 'ubi'
        run: docker build . --file Dockerfile.DoDscap --build-arg CONTAINER="localbuild/${{ matrix.container.repo_name }}:${{ matrix.container.version }}" --tag "localbuild/${{ matrix.container.name }}:${{ matrix.container.version }}-dodscap"

      - name: Run OpenSCAP Scan
        if: matrix.container.name == 'ubi'
        run: docker build . --file Dockerfile.Openscap --build-arg CONTAINER="localbuild/${{ matrix.container.repo_name }}:${{ matrix.container.version }}" --tag "localbuild/${{ matrix.container.name }}:${{ matrix.container.version }}-openscap"

      - name: Run Inspec Scan
        if: matrix.container.name == 'ubi'
        run: docker build . --file Dockerfile.inspec --build-arg CONTAINER="localbuild/${{ matrix.container.repo_name }}:${{ matrix.container.version }}" --tag "localbuild/${{ matrix.container.name }}:${{ matrix.container.version }}-inspec"

      # Conditional push only on merges (push events)
      - name: Tag and Push Docker image
        if: github.event_name == 'push'
        run: |
          docker tag "localbuild/${{ matrix.container.name }}:${{ matrix.container.version }}" "${{ secrets.DOCKER_USERNAME }}/${{ matrix.container.name }}:${{ matrix.container.version }}:latest"
          docker tag "localbuild/${{ matrix.container.name }}:${{ matrix.container.version }}" "${{ secrets.DOCKER_USERNAME }}/${{ matrix.container.name }}:${{ matrix.container.version }}:${{ github.sha }}"
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push "${{ secrets.DOCKER_USERNAME }}/${{ matrix.container.name }}:${{ matrix.container.version }}:latest"
          docker push "${{ secrets.DOCKER_USERNAME }}/${{ matrix.container.name }}:${{ matrix.container.version }}:${{ github.sha }}"

      - name: Docker logout
        if: github.event_name == 'push'
        run: docker logout
