name: Build and Test UBI 8.9 Image
on:
  pull_request:
    types: [opened, synchronize, reopened]
    
env:
  CONTAINER_TAG: "ubi"
  CONTAINER_MAJOR_VERSION: "8"
  CONTAINER_MINOR_VERSION: "9"
jobs:

  build-test-push-ubi8-image:
    
    runs-on: ubuntu-latest
    steps:
     #The formatting on this first line might be different for the CONTAINER_VERSION_TAG, but hopefully the rest is standard and can be copied and pasted as needed for follow on container builds.
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile.ubi8 --build-arg CONTAINER_VERSION_TAG="${{env.CONTAINER_TAG}}:${{env.CONTAINER_MAJOR_VERSION}}.${{env.CONTAINER_MINOR_VERSION}}" --tag "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}"
    - name: Vulnerability scan image
      id: scan
      uses: anchore/scan-action@v3
      with:
        image: "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}"
        only-fixed: true  
        severity-cutoff: critical
    - name: Upload Vulnerability Scan
      uses: github/codeql-action/upload-sarif@v3
      continue-on-error: true
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
    - name: DoD Scap Scan
      run: docker build . --file Dockerfile.scap --build-arg CONTAINER="localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}" --tag "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}-scap"
    - uses: shrink/actions-docker-extract@v3
      id: "extract-scap"
      with:
        image: "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}-scap"
        path: /root/SCC/Sessions
        destination: "${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}.${{env.CONTAINER_MINOR_VERSION}}-scap-output"
    - name: Upload Scap Results
      uses: actions/upload-artifact@v4
      with:
        name: "${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}.${{env.CONTAINER_MINOR_VERSION}} DoD SCAP Scan Results"
        path: "${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}.${{env.CONTAINER_MINOR_VERSION}}-scap-output"
    - name: RunInspec Scan
      run: docker build . --file Dockerfile.inspec --build-arg CONTAINER="localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}" --tag "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}-inspec"
      continue-on-error: true
    - name: ExtractInspec Results
      uses: shrink/actions-docker-extract@v3
      id: "extract-inspec"
      with:
        image: "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}-inspec"
        path: /tmp/junit.xml
        destination: "${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}.${{env.CONTAINER_MINOR_VERSION}}-inspec-output"
    - name: PublishInspec Test Results
      uses: EnricoMi/publish-unit-test-result-action/linux@v2
      if: always()
      with:
        files: |
          "${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}.${{env.CONTAINER_MINOR_VERSION}}-inspec-output/junit.xml
    - name: UploadInspec output
      uses: actions/upload-artifact@v4
      with:
        name: "${{env.CONTAINER_TAG}} ${{env.CONTAINER_VERSION}}Inspec Scan Results"
        path: "${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}.${{env.CONTAINER_MINOR_VERSION}}-inspec-output"
