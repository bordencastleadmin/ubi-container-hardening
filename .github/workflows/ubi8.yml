name: Build, Test, and Push UBI 8.9 Image
on:
  push:
    branches: [ "main" ]
env:
  CONTAINER_TAG: "ubi"
  CONTAINER_MAJOR_VERSION: "8"
  CONTAINER_MINOR_VERSION: "9"
jobs:

  build-test-push-ubi8-image:
    
    runs-on: ubuntu-latest
    steps:
     #The formatting on this first line might be different for the CONTAINER_VERSION_TAG, but hopefully the rest is standard and can be copied and pasted as needed for follow on container builds.
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile.ubi8 --build-arg CONTAINER_VERSION_TAG="${{env.CONTAINER_TAG}}:${{env.CONTAINER_MAJOR_VERSION}}.${{env.CONTAINER_MINOR_VERSION}}" --tag "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}"
    - name: Vulnerability scan image
      id: ubi8-scan
      uses: anchore/scan-action@v3
      with:
        image: "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}"
        only-fixed: true  
        severity-cutoff: critical
    - name: Upload Vulnerability Scan
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ steps.ubi8-scan.outputs.sarif }}
    - name: DoD Scap Scan
      run: docker build . --file Dockerfile.DoDscap --build-arg CONTAINER="localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}" --tag "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}-scap"
    - uses: shrink/actions-docker-extract@v3
      id: "ubi8-extract-scap"
      with:
        image: "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}-scap"
        path: /root/SCC/Sessions
        destination: "ubi8-scap-output"
    - name: Upload Scap Results
      uses: actions/upload-artifact@v4
      with:
        name: "UBI8 DoD SCAP Scan Results"
        path: "ubi8-scap-output"
    - name: Openscap Scan
      run: docker build . --file Dockerfile.Openscap --build-arg CONTAINER="localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}" --tag "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}-scap"
    - uses: shrink/actions-docker-extract@v3
      id: "ubi8-extract-openscap"
      with:
        image: "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}-scap"
        path: /tmp/openscap.html
        destination: "ubi8-openscap-output"
    - name: Upload Scap Results
      uses: actions/upload-artifact@v4
      with:
        name: "Openscap Scan Results"
        path: "ubi8-openscap-output"
    - name: RunInspec Scan
      run: docker build . --file Dockerfile.inspec --build-arg CONTAINER="localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}" --tag "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}-inspec"
    - name: Extract Inspec Results
      uses: shrink/actions-docker-extract@v3
      id: "ubi8-extract-inspec"
      with:
        image: "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}-inspec"
        path: /tmp/junit.xml
        destination: "ubi8-inspec-output"
    - name: PublishInspec Test Results
      uses: EnricoMi/publish-unit-test-result-action/linux@v2
      with:
        files: |
          ubi8-inspec-output/junit.xml
    - name: UploadInspec output
      uses: actions/upload-artifact@v4
      with:
        name: "UBI8 Inspec Scan Results"
        path: ubi8-inspec-output
    - name: Tag the docker image
      run: |
        docker tag "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}" "${{secrets.DOCKER_USERNAME}}/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:latest"
        docker tag "localbuild/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}" "${{secrets.DOCKER_USERNAME}}/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${GITHUB_SHA}"
    - name: Docker login
      run: echo ${{secrets.DOCKER_PASSWORD}} | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
    - name: Push the docker tags
      run: |
        docker push "${{secrets.DOCKER_USERNAME}}/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:latest"
        docker push "${{secrets.DOCKER_USERNAME}}/${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${GITHUB_SHA}"
    - name: Docker logout
      run: docker logout

  build-test-push-pihole-image:
    env:
      PIHOLE_TAG: "pi-hole"
      PIHOLE_VERSION: "v5.17.3"
    runs-on: ubuntu-latest
    needs: build-test-push-ubi8-image
    steps:
    - uses: actions/checkout@v4
    - name: Clone Pi-hole repository
      run: git clone --branch ${PIHOLE_VERSION} https://github.com/pi-hole/pi-hole
    - name: Copy the Dockerfile.pihole into the repo
      run: cp ./Dockerfile.pihole ./pi-hole/Dockerfile
    - name: Docker login
      run: echo ${{secrets.DOCKER_PASSWORD}} | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
    - name: Build the Docker image
      working-directory: ./pi-hole
      run: docker build --no-cache --build-arg PIHOLE_VERSION=${{env.PIHOLE_VERSION}}  --tag "localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}" .
    - name: Vulnerability scan image
      id: pihole-scan
      uses: anchore/scan-action@v3
      with:
        image: "localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}"
        only-fixed: true  
        severity-cutoff: critical
        fail-build: false
    - name: Upload Vulnerability Scan
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ steps.pihole-scan.outputs.sarif }}
    - name: DoD Scap Scan
      run: docker build . --no-cache --file Dockerfile.DoDscap --build-arg CONTAINER="localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}" --tag "localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}-scap"
    - uses: shrink/actions-docker-extract@v3
      id: "pihole-extract-scap"
      with:
        image: "localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}-scap"
        path: /root/SCC/Sessions
        destination: pihole-scap-output
    - name: Upload Scap Results
      uses: actions/upload-artifact@v4
      with:
        name: "Pi-hole DoD SCAP Scan Results"
        path: pihole-scap-output
    - name: Openscap Scan
      run: docker build . --no-cache --file Dockerfile.Openscap --build-arg CONTAINER="localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}" --tag "localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}-scap"
    - uses: shrink/actions-docker-extract@v3
      id: "pihole-ubi8-openjdk-extract-openscap"
      with:
        image: "localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}-scap"
        path: /tmp/openscap.html
        destination: "pihole-ubi8-openjdk-openscap-output"
    - name: Upload Pi-hole OpenScap Results
      uses: actions/upload-artifact@v4
      with:
        name: "Openscap Pi-hole Scan Results"
        path: "pihole-ubi8-openjdk-openscap-output"
    - name: Run Inspec Scan
      run: docker build . --no-cache --file Dockerfile.inspec --build-arg CONTAINER="localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}" --tag "localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}-inspec"
    - name: ExtractInspec Results
      uses: shrink/actions-docker-extract@v3
      id: "pihole-extract-inspec"
      with:
        image: "localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}-inspec"
        path: /tmp/junit.xml
        destination: pihole-inspec-output
    - name: PublishInspec Test Results
      uses: EnricoMi/publish-unit-test-result-action/linux@v2
      with:
        files: |
          pihole-inspec-output/junit.xml
    - name: UploadInspec output
      uses: actions/upload-artifact@v4
      with:
        name: "Pi-hole Inspec Scan Results"
        path: pihole-inspec-output
    - name: Tag the docker image
      run: |
        docker tag localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}} "${{secrets.DOCKER_USERNAME}}/${{env.JENKINS_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}-latest"
        docker tag localbuild/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}} "${{secrets.DOCKER_USERNAME}}/${{env.JENKINS_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}-${GITHUB_SHA}"
    - name: Push the docker tags
      run: |
        docker push "${{secrets.DOCKER_USERNAME}}/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}-latest"
        docker push "${{secrets.DOCKER_USERNAME}}/${{env.PIHOLE_TAG}}-${{env.CONTAINER_TAG}}-${{env.CONTAINER_MAJOR_VERSION}}-${{env.CONTAINER_MINOR_VERSION}}:${{env.PIHOLE_VERSION}}-${GITHUB_SHA}"
    - name: Docker logout
      run: docker logout
